import itertools

import numpy as np
from scipy import linalg
import matplotlib.pyplot as plt
from matplotlib.colors import LogNorm

from sklearn import mixture 
from sklearn.model_selection import StratifiedKFold


# Compile features that pixels will be clustered with
predfeatures = floodingdf[['latitude',
                           'longitude',
                           'elevation',
                           'aspect',
                           'gradient',
                           'initialVH',
                           'initialVV',
                           'VHdifference',
                           'VVdifference',
                           'initialB2',
                           'initialB3',
                           'initialB4',
                           'initialB8',
                           'B2difference',
                           'B8difference',
                           'B4difference',
                           'B8difference']].copy()
                
predfeatures = predfeatures.reset_index()
predfeatures = predfeatures.drop(columns=['index'])


# Compute a fixed 3-component Gaussian mixture using features 
gmm = mixture.GaussianMixture(n_components=3, covariance_type="full").fit(predfeatures)
predflooding3component = gmm.predict(predfeatures)


# Compute a Dirichlet process Gaussian mixture with bounded-n components (e.g. 4)
dpgmm = mixture.BayesianGaussianMixture(n_components=4, covariance_type="full").fit(predfeatures)
predfloodingdirichletcomponent = dpgmm.predict(predfeatures)


# Add GMM results to dataframe
floodingdf['3component'] = predflooding3component.tolist()
floodingdf['dirichletcomponent'] = predfloodingdirichletcomponent.tolist()
floodingdf
